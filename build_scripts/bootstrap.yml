---
- hosts: localhost
  become: yes

  tasks:

    - name: install nginx and npm (required to install elasticdump)
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
         - nginx
         - npm

    - name: copy nginx configuration
      copy:
        src: nginx.conf
        dest: /etc/nginx/nginx.conf

    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: install pip packages tox
      pip:
        name="tox"
        state=latest

    - name: create tox environment
      shell: >
        tox -r -e {{ ansible_env.ENV_NAME }}
      args:
        chdir: "{{ ansible_env.APP_PATH }}"
        creates: "{{ ansible_env.VIRTUAL_ENV_PATH }}"

    - name: install elasticdump using npm
      npm:
        name: elasticdump
        global: yes

    - name: copy folder destination and virtualenv activation when ssh
      lineinfile:
        path: /home/vagrant/.zshrc
        line: "cd /vagrant && source /tmp/virtual_env35/bin/activate"

    - name: call elasticsearch API for data indices template creation
      script: ./scripts/create_template.sh

    - name: create a bucket on S3
      shell: "{{ ansible_env.VIRTUAL_ENV_PATH }}/bin/python {{ ansible_env.APP_PATH }}/build_scripts/scripts/create_bucket.py"

    - name: create cron task in order to execute automatic indices backup to s3
      cron:
        name: "automatic indices snapshot to s3"
        minute: "0"
        job: "python /vagrant/build_scripts/scripts/make_snapshot.py"
        cron_file: /etc/cron.d/snapshot
        user: root

    - name: make link between node and nodejs in order to let elasticdump finds node
      file:
        src: /usr/bin/nodejs
        dest: /usr/bin/node
        state: link

    - name: create the snapshots directory
      file:
        path: /tmp/snapshots
        state: directory
